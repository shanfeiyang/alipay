<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.alipay.dao.SellerMapper" >
  <resultMap id="BaseResultMap" type="com.example.alipay.pojo.Seller" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="linkman_name" property="linkmanName" jdbcType="VARCHAR" />
    <result column="linkman_mobile" property="linkmanMobile" jdbcType="VARCHAR" />
    <result column="linkman_email" property="linkmanEmail" jdbcType="VARCHAR" />
    <result column="license_number" property="licenseNumber" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="app_auth_token" property="appAuthToken" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seller_id, store_id, name, status, create_time, linkman_name, linkman_mobile, 
    linkman_email, license_number, address, app_auth_token
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.alipay.pojo.SellerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jy_seller
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jy_seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByStoreId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from jy_seller
    where store_id = #{storeId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jy_seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.alipay.pojo.SellerExample" >
    delete from jy_seller
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.alipay.pojo.Seller" >
    insert into jy_seller (id, seller_id, store_id, 
      name, status, create_time, 
      linkman_name, linkman_mobile, linkman_email, 
      license_number, address, app_auth_token
      )
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{linkmanName,jdbcType=VARCHAR}, #{linkmanMobile,jdbcType=VARCHAR}, #{linkmanEmail,jdbcType=VARCHAR}, 
      #{licenseNumber,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{appAuthToken,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.alipay.pojo.Seller" >
    insert into jy_seller
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="linkmanName != null" >
        linkman_name,
      </if>
      <if test="linkmanMobile != null" >
        linkman_mobile,
      </if>
      <if test="linkmanEmail != null" >
        linkman_email,
      </if>
      <if test="licenseNumber != null" >
        license_number,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="appAuthToken != null" >
        app_auth_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkmanName != null" >
        #{linkmanName,jdbcType=VARCHAR},
      </if>
      <if test="linkmanMobile != null" >
        #{linkmanMobile,jdbcType=VARCHAR},
      </if>
      <if test="linkmanEmail != null" >
        #{linkmanEmail,jdbcType=VARCHAR},
      </if>
      <if test="licenseNumber != null" >
        #{licenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="appAuthToken != null" >
        #{appAuthToken,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.alipay.pojo.SellerExample" resultType="java.lang.Integer" >
    select count(*) from jy_seller
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jy_seller
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.linkmanName != null" >
        linkman_name = #{record.linkmanName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanMobile != null" >
        linkman_mobile = #{record.linkmanMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanEmail != null" >
        linkman_email = #{record.linkmanEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseNumber != null" >
        license_number = #{record.licenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.appAuthToken != null" >
        app_auth_token = #{record.appAuthToken,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jy_seller
    set id = #{record.id,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      linkman_name = #{record.linkmanName,jdbcType=VARCHAR},
      linkman_mobile = #{record.linkmanMobile,jdbcType=VARCHAR},
      linkman_email = #{record.linkmanEmail,jdbcType=VARCHAR},
      license_number = #{record.licenseNumber,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      app_auth_token = #{record.appAuthToken,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.alipay.pojo.Seller" >
    update jy_seller
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkmanName != null" >
        linkman_name = #{linkmanName,jdbcType=VARCHAR},
      </if>
      <if test="linkmanMobile != null" >
        linkman_mobile = #{linkmanMobile,jdbcType=VARCHAR},
      </if>
      <if test="linkmanEmail != null" >
        linkman_email = #{linkmanEmail,jdbcType=VARCHAR},
      </if>
      <if test="licenseNumber != null" >
        license_number = #{licenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="appAuthToken != null" >
        app_auth_token = #{appAuthToken,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.alipay.pojo.Seller" >
    update jy_seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      linkman_name = #{linkmanName,jdbcType=VARCHAR},
      linkman_mobile = #{linkmanMobile,jdbcType=VARCHAR},
      linkman_email = #{linkmanEmail,jdbcType=VARCHAR},
      license_number = #{licenseNumber,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      app_auth_token = #{appAuthToken,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>